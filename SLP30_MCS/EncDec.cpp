#include "stdafx.h"
#include "EncDec.h"

BYTE gEncryptBuffer[64] =
{ 0x73,0x7d,0x36,0x6d,0x45,0x5b,0x77,0xf6,0x20,0xdb,0x77,0x12,0x88,0xe6,0xc7,0x62,
  0x49,0xa4,0x9a,0x4c,0x7a,0x77,0xca,0x20,0x41,0xc1,0xf2,0xc8,0x51,0x09,0xb2,0x27,
  0x64,0xe0,0xfd,0x7c,0x79,0x44,0xdd,0x32,0xd2,0xf0,0xde,0x24,0x35,0x22,0x91,0x23,
  0x2b,0xb8,0xe7,0x86,0xc5,0x2a,0x1a,0xa4,0x83,0xed,0x87,0x8b,0xab,0x19,0xcb,0xcd };


CEncDec::CEncDec()
{
}


CEncDec::~CEncDec()
{
}

void CEncDec::Encrypt(BYTE* pData, int nIndex, int nCount)
{
	int nEnc = 0;
	int nPoint = nIndex;
	for (int i = 0; i < nCount; i++)
	{
		pData[nPoint] = pData[nPoint] ^ gEncryptBuffer[nEnc];
		if (++nEnc >= 64) {
			nEnc = 0;
		}
		++nPoint;
	}
}

void CEncDec::PacketEncode(BYTE* pData, int nIndex, int nCount)
{
	Encrypt(pData, nIndex, nCount);
}

void CEncDec::PacketDecode(BYTE* pData, int nIndex, int nCount)
{
	Encrypt(pData, nIndex, nCount);
}
